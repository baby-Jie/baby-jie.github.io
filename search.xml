<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>实现linux的cat命令</title>
      <link href="/2022/05/27/%E5%AE%9E%E7%8E%B0linux%E7%9A%84cat%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/05/27/%E5%AE%9E%E7%8E%B0linux%E7%9A%84cat%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="实现linux的cat命令"><a href="#实现linux的cat命令" class="headerlink" title="实现linux的cat命令"></a>实现linux的cat命令</h1><h2 id="cat命令简介"><a href="#cat命令简介" class="headerlink" title="cat命令简介"></a>cat命令简介</h2><ul><li>首先linux的命令手册: <code>man cat</code>  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat - concatenate files and print on the standard output</span><br></pre></td></tr></tbody></table></figure></li><li><a href="https://www.linuxcool.com/cat">cat</a><sup>1</sup>: 在终端设备上显示文件内容，其功能是用于查看文件内容</li></ul><h2 id="C代码实现"><a href="#C代码实现" class="headerlink" title="C代码实现"></a>C代码实现</h2><ul><li><p>首先看几个函数</p><ul><li><a href="https://www.tutorialspoint.com/c_standard_library/c_function_fopen.htm">fopen</a><sup>2</sup>: The C library function <code>FILE *fopen(const char *filename, const char *mode)</code> opens the filename pointed to, by filename using the given mode.<ul><li>打开文件，返回文件指针</li><li>example: <code>FILE* fp = fopen("test.txt", "r");</code></li></ul></li><li><a href="https://www.tutorialspoint.com/c_standard_library/c_function_fread.htm">fread</a><sup>3</sup>: The C library function size_t fread(void *ptr, size_t size, size_t nmemb, FILE *stream) reads data from the given stream into the array pointed to, by ptr.<ul><li>从文件中读取字节</li><li>example: <code>int len = fread(buffer, 1, 5, fp);</code></li></ul></li><li><a href="https://www.tutorialspoint.com/c_standard_library/c_function_fprintf.htm">fprintf</a><sup>4</sup>: The C library function int fprintf(FILE *stream, const char *format, …) sends formatted output to a stream.<ul><li>格式化输出到流</li><li>examples:<ul><li>格式化输出到标准输出流: <code>fprintf(stdout, "this is standard output!\n")</code>, 相当于 <code>printf</code></li><li>格式化输出到标准错误流: <code>fprintf(stderr, "this is standard error!\n")</code></li></ul></li></ul></li><li><a href="https://www.tutorialspoint.com/c_standard_library/c_function_fclose.htm">fclose</a><sup>5</sup>: The C library function int fclose(FILE *stream) closes the stream. All buffers are flushed.<ul><li>关闭文件流</li><li>example: <code>fclose(fp)</code></li></ul></li><li><a href="https://linux.die.net/man/2/access">access</a><sup>6</sup>: access - check real user’s permissions for a file<ul><li>判断是否具有文件操作的权限</li><li>examples:<ul><li>判断文件是否存在: <code>if (access(file_path, F_OK) == 0){}</code></li><li>判断是否可以读取文件: <code>if (access(file_path, R_OK) == 0){}</code></li><li>判断是否可以写入文件: <code>if (access(file_path, W_OK) == 0){}</code></li></ul></li></ul></li><li><a href="https://man7.org/linux/man-pages/man3/getline.3.html">getline</a><sup>7</sup>: reads an entire line from stream,<ul><li>从流中读取一整行</li><li>example: <code>ssize_t read = getline(&amp;buffer, &amp;len, stdin);</code></li></ul></li></ul></li><li><p>创建 <code>mycat.c</code></p></li><li><p><code>cat</code> 命令需要接文件参数，引入参数</p>  <figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span>{<span class="keyword">return</span> <span class="number">0</span>;}</span><br></pre></td></tr></tbody></table></figure></li><li><p>判断参数的个数，如果小于等于1个参数需要按行输出用户的输入</p>  <figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// take user's input and output it by line</span></span><br><span class="line"><span class="type">char</span>* line;</span><br><span class="line"><span class="type">size_t</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="type">ssize_t</span> read;</span><br><span class="line"><span class="keyword">while</span> ((read = getline(&amp;line, &amp;len, <span class="built_in">stdin</span>) != <span class="number">-1</span>))</span><br><span class="line">{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>, line);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (line)</span><br><span class="line">{</span><br><span class="line">    <span class="built_in">free</span>(line);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>定义一个专门显示文件内容的函数</p>  <figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">show_file_content</span><span class="params">(<span class="type">char</span>* file_path)</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (access(file_path, R_OK) == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        FILE* fp = fopen(file_path, <span class="string">"r"</span>);</span><br><span class="line">        <span class="keyword">if</span> (fp)</span><br><span class="line">        {</span><br><span class="line">            <span class="type">char</span> buffer[<span class="number">5</span>];</span><br><span class="line">            <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (len = fread(buffer, <span class="number">1</span>, <span class="number">4</span>, fp))</span><br><span class="line">            {</span><br><span class="line">                buffer[len] = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s"</span>, buffer);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"file open error\n"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"mycat: 1: No such file or directory\n"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>接下来是main函数的调用:</p>  <figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (argc &gt; <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; argc; i++)</span><br><span class="line">        {</span><br><span class="line">            show_file_content(argv[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="comment">// take user's input and output it</span></span><br><span class="line">        <span class="type">char</span>* line;</span><br><span class="line">        <span class="type">size_t</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="type">ssize_t</span> read;</span><br><span class="line">        <span class="keyword">while</span> ((read = getline(&amp;line, &amp;len, <span class="built_in">stdin</span>) != <span class="number">-1</span>))</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s"</span>, line);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (line)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">free</span>(line);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> EXIT_FAILURE;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>全部代码: <code>mycat.c</code></p>  <figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">show_file_content</span><span class="params">(<span class="type">char</span>* file_path)</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (access(file_path, R_OK) == <span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        FILE* fp = fopen(file_path, <span class="string">"r"</span>);</span><br><span class="line">        <span class="keyword">if</span> (fp)</span><br><span class="line">        {</span><br><span class="line">            <span class="type">char</span> buffer[<span class="number">5</span>];</span><br><span class="line">            <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (len = fread(buffer, <span class="number">1</span>, <span class="number">4</span>, fp))</span><br><span class="line">            {</span><br><span class="line">                buffer[len] = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s"</span>, buffer);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"file open error\n"</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"mycat: 1: No such file or directory\n"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv)</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span> (argc &gt; <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; argc; i++)</span><br><span class="line">        {</span><br><span class="line">            show_file_content(argv[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> EXIT_SUCCESS;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="comment">// take user's input and output it</span></span><br><span class="line">        <span class="type">char</span>* line;</span><br><span class="line">        <span class="type">size_t</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="type">ssize_t</span> read;</span><br><span class="line">        <span class="keyword">while</span> ((read = getline(&amp;line, &amp;len, <span class="built_in">stdin</span>) != <span class="number">-1</span>))</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%s"</span>, line);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (line)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">free</span>(line);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> EXIT_FAILURE;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><ul><li>先编译: <code>gcc mycat.c -o mycat</code></li><li>无参数运行: <code>./mycat</code> <code>Ctrl + D</code> 结束输入  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-16-5-centos simulate_commands]# ./mycat</span><br><span class="line">hello</span><br><span class="line">hello</span><br><span class="line">my name is smx</span><br><span class="line">my name is smx</span><br><span class="line">how are you today</span><br><span class="line">how are you today</span><br><span class="line">bye</span><br><span class="line">bye</span><br></pre></td></tr></tbody></table></figure></li><li>带参数运行: <code>./mycat 1.txt 2.txt</code></li></ul><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul><li><code>[1]</code> <a href="https://www.linuxcool.com/cat">cat命令详细介绍</a></li><li><code>[2]</code> <a href="https://www.tutorialspoint.com/c_standard_library/c_function_fopen.htm">fopen c函数</a></li><li><code>[3]</code> <a href="https://www.tutorialspoint.com/c_standard_library/c_function_fread.htm">fread c函数</a></li><li><code>[4]</code> <a href="https://www.tutorialspoint.com/c_standard_library/c_function_fprintf.htm">fprintf c函数</a></li><li><code>[5]</code> <a href="https://www.tutorialspoint.com/c_standard_library/c_function_fclose.htm">fclose c函数</a></li><li><code>[6]</code> <a href="https://linux.die.net/man/2/access">access c函数</a></li><li><code>[7]</code> <a href="https://man7.org/linux/man-pages/man3/getline.3.html">getline c函数</a></li></ul><h2 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h2><ul><li>c函数<ul><li><code>fopen</code>、<code>fread</code>、<code>fprintf</code>、<code>fclose</code>、<code>access</code>、 <code>getline</code></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> c </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
